//前台菜单配置--顶级菜单时候获取菜单数据
var index_css={
	x:0,
	y:0,//鼠标位置
	width:$(window).width(),
	height:$(window).height(),
	//默认配置
	left_div:{
		width:"50",
		height:this.height-70+"",
		init:{
			open:"50",
			close:"-310"
		},
	},
    init :{
		open: this.width-310,
		close:this.width-40
	},
	germoty:function(eve){
        var div = $(eve);
        var y1 = div.offset().top;
        var y2 = y1 + div.height();
        var x1 = div.offset().left;
        var x2 = x1 + div.width();
        return {x1:x1,x2:x2,y1:y1,y2:y2};
	},
	isMouseForDiv:function(germoty){
        if( this.x <germoty.x1 || this.x > germoty.x2 || this.y < germoty.y1 || this.y > germoty.y2){
            return true;
        }else{
            return false;
        }
	}
}
var menuListJson;
//展示菜单权限
var menuDisplay=true;//true为后台加载菜单，false为前台加载菜单
var dataIndex = 0;
var baseUrls=location.protocol+"//"+location.hostname;
var layerObjects=[];
//菜单json字符串格式
var menuList;

//从后台加载菜单，true表示匹配前台，false直接从后台读取菜单
function loadMenuFromService(isPick){
	$.ajax({
		type: "get",
		//url:"/psxj/ac-role!ajaxMenuJson.action",
		async: false,
		dataType: "json",
		success: function(data){
			if(isPick){
				var newMenuList = new Array();
				var k=0;
				for(var i=0;i<window.menuList.length;i++){
					for(var j=0;j<data.length;j++){
						if(window.menuList[i].id==data[j].id){
							newMenuList[k]=window.menuList[i];
							k++;
							break;
						}
					}
				}
				window.menuList = newMenuList;
			}else{
				window.menuList=data;
			}
			showFirstMenuList();
		},
		error:function(XHR, textStatus, errorThrown){
			parent.layer.msg('菜单加载失败');
		}
	});	
}
//加载前端顶级菜单
function loadRootMeau(menuDisplays){
	if(menuDisplays){
		$.ajax({
            method : "GET",
			// url:"/psxj/system-menu!getDisplayPlatformMenuInfo.action",
			url : "/psxj/data/awater/getDisplayPlatformMenuInfo.json",
			dataType: "json",
			success: function(data){
				if(data&&data.success){
					menuList=typeof (data.result)=='object' ? data.result : JSON.parse(data.result);
					menuLen = menuList.length;
				    var menuStr = "",i=0;
			    	$(menuList).each(function(index,item){
			    		if(!item.pid && item.pid==""){
				    		if(item.name.length==7){
				    			menuStr += "<li><a onclick='showSecondMenu(\"" + item.id + "\")' href='#'>" +
								"<div class='" + item.className + "'style='margin-left:18px;width:45px;height:45px;'></div>" +
											"<span>" + item.name + "</span></a></li>";
				    		}else{
				    			//menuStr += "<li style='margin-top:8px;'><a onclick='showSecondMenu(\"" + data[i].id + "\")' href='#' class='sssbgl'>" + data[i].text + "</a></li>";
						       	menuStr += "<li><a onclick='showSecondMenu(\"" + item.id + "\")' href='#'>" +
								"<div class='" + item.className + " 'style='margin-left: 3px; width: 45px;height: 45px;'" +//margin-left:6px;width:50px;height:30px;margin-top: -5px;
											"></div><span>" + item.name + "</span></a></li>";
				    		}
					       	if (i == 0 && item.isLeaf=='0') 
					            showSecondMenu(item.id);//默认显示
					       	i++;
			    		}
			    	});
				    seperatordefaultClose();
				    $("#topMenu").html(menuStr);
					$("#topMenu>li").on('click',function(){
						$(this).addClass("tnav_def").siblings().removeClass("tnav_def");//给一级菜单去除默认样式
					});
				} else {
					parent.layer.msg('该用户未配置角色权限');
				}
			},
			error:function(XHR, textStatus, errorThrown){
				exitSystem();
				//parent.layer.msg('菜单加载失败');
			}
		});
	}else{
		$.ajax({
			type: "get",
			url:"/psxj/systemInfo/data/augur_min.json",
			async: false,
			dataType: "json",
			success: function(data){ 
				menuListJson=data;
				var menuStr = "";
		    	$(menuListJson).each(function(index,item){
		    		if(item.text.length==9){
		    			menuStr += "<li><a onclick='showSecondMenu(\"" + item.id + "\")' href='#'>" +
						"<div class='" + item.className + "'style='margin-left:18px;width:45px;height:45px;'></div>" +
									"<span>" + item.text + "</span></a></li>";
		    		}else if(item.text.length>4&&item.text.length<7){
		    			menuStr += "<li><a onclick='showSecondMenu(\"" + item.id + "\")' href='#'>" +
						"<div class='" + item.className + "'style='margin-left:6px;width:45px;height:45px;'></div>" +
									"<span>" + item.text + "</span></a></li>";
		    		}else{
		    			//menuStr += "<li style='margin-top:8px;'><a onclick='showSecondMenu(\"" + data[i].id + "\")' href='#' class='sssbgl'>" + data[i].text + "</a></li>";
				       	menuStr += "<li><a onclick='showSecondMenu(\"" + item.id + "\")' href='#'>" +
						"<div class='" + item.className + "'style='margin-left:3px;width:45px;height:45px;'></div>" +
									"<span>" + item.text + "</span></a></li>";
		    		}
			        if (!item.system && index == 0) //判断是不是新建窗口
			            showSecondMenu(item.id);//默认显示
		    	});
			    seperatordefaultClose();
			    $("#topMenu").html(menuStr);
				$("#topMenu>li").on('click',function(){
					$(this).addClass("tnav_def").siblings().removeClass("tnav_def");//给一级菜单去除默认样式
				});
			}
		});
	}
	
}
//重新加载js文件
function loadJs(file) {
    var head = $("head").remove("script[role='reload']");
    $("<scri" + "pt>" + "</scr" + "ipt>").attr({ role: 'reload', src: file, type: 'text/javascript' }).appendTo(head);
}

//显示一级菜单
function showFirstMenuList() {
	menuLen = menuList.length;
    var menuStr = "";
    for (var i = 0; i < menuLen; i++) {
        if (menuList[i].pid == 0) {
            //根据菜单JSON格式进行迭代循环 class='hover'
    		 menuStr += "<li><a onclick='showSecondMenu(\"" + menuList[i].id + "\")' href='#'>" +
			"<div class='" + menuList[i].className + "'style='width: 45px;height:45px;'></div>" +
						"<span>" + menuList[i].name + "</span></a></li>";
            if (menuList[i].id == 1) {
                //默认显示
                //一级菜单：第一个子系统
                //二级菜单：第一个菜单
                showSecondMenu(1);
                showThirdMenu(11);
                //打开三级菜单
            }
        }
    }
    seperatordefaultClose();
    $("#topMenu").html(menuStr);
	$("#topMenu>li").on('click',function(){
		$(this).addClass("tnav_def").siblings().removeClass("tnav_def");//给一级菜单去除默认样式
	});
}

//显示左侧二级菜单
function showSecondMenu(menuId, o) {
    //一级菜单点击后的样式
    $(o).parent().addClass("hover").siblings().removeClass("hover");
    //清空二级菜单
    $("#leftMenu").empty();
    //定义变量
    var secondMenuStr = "";
    if(!menuDisplay){  //这边为自定义菜单
    	for (var i = 0; i < menuListJson.length; i++) {
    		if(menuListJson[i].id==menuId && menuListJson[i].system){//系统运维
    			seperatorClose();
    			var win = window.open(menuListJson[i].url,menuListJson[i].text);
    		}
    		if(menuListJson[i].id==menuId && menuListJson[i].menuList2){
    			for(var k=0;k<menuListJson[i].menuList2.length;k++){
    				var item = menuListJson[i].menuList2[k];
    				secondMenuStr += "<li><a href='#' onclick='showThirdMenu(\"" + item.id + "\")' style='padding: 10px 5px 5px;text-align: center;'>" +
    				"<i class='"+item.menuIcon+"'></i><span class='nav-label'></span><span class='fa arrow'></span>" +
    				"<div style='text-align:center;padding: 0 15px 5px;text-decoration: none;cursor: pointer;'>" + item.text + "</div></a></li>";
    				//默认显示
    				//二级菜单：第一个菜单
    				if(item.menuCode=='ME_ONE') {
    					showThirdMenu(item.id);//三级菜单
    				} 
    			}
    		}
	    }
	    $("#leftMenu").html(secondMenuStr);
		$("#leftMenu>li:first-child").addClass("fixli defactive");
		$("#leftMenu>li").on('click',function(){
			$(this).addClass("fixli defactive").siblings().removeClass("fixli defactive");//给二级菜单去除默认样式
		});
    }else{
		for (var i = 0; i < menuLen; i++) {
			if(menuList[i].id==menuId && menuList[i].isLeaf=='1' && menuList[i].pid==""){//一级菜单跳转页面
				var url=""
				if(menuList[i].link && menuList[i].link.indexOf('/${ctx}')!=-1)
					url=menuList[i].link.split('/${ctx}')[1];
				else
					url=menuList[i].link;
				seperatorClose();
				var win = window.open(url,menuList[i].name);
			}else if(menuList[i].pid==menuId){
				secondMenuStr += "<li><a href='#' onclick='showThirdMenu(\"" + menuList[i].id + "\")' style='padding: 10px 5px 5px;text-align: center;'>" +
				"<i class='"+menuList[i].className+"'></i><span class='nav-label'></span><span class='fa arrow'></span>" +
				"<div style='text-align:center;padding: 0 15px 5px;text-decoration: none;cursor: pointer;'>" + menuList[i].name + "</div></a></li>";
				//默认显示
				//二级菜单：第一个菜单
				if(menuId=='ME_InspectionTour') {
					showThirdMenu(menuList[i].id,2);
				} else if(menuId=="ME_DataReported") {
					showThirdMenu(menuList[i].id,2);
				} else if(menuId=='ME_RepairMeasurOfData') {
					showThirdMenu(menuList[i].id,2);
				}else if(menuId=='ME_SystemConfiguration') {
					showThirdMenu(menuList[i].id,2);
				}else if(menuId=='ME_PshManager') {
					showThirdMenu(menuList[i].id,2);
				}
			}
	    }
	    $("#leftMenu").html(secondMenuStr);
		//$("#leftMenu>li:first-child").addClass("fixli").siblings().addClass("bgImg");//给二级菜单添加默认样式
		$("#leftMenu>li:first-child").addClass("fixli defactive");
		
		$("#leftMenu>li").on('click',function(){
			$(this).addClass("fixli defactive").siblings().removeClass("fixli defactive");//给二级菜单去除默认样式
		});
		 var objEvt = $._data($("#leftMenu")[0], 'events');
		 if (!objEvt || !objEvt['click']) {
             $("#leftMenu").click(function (event) {
                 seperatorOpen();
             });
             /*.mouseout(function (event) {
				 var flag_meau=index_css.isMouseForDiv(index_css.germoty("#leftMenu"));
				 var flag_left_div = index_css.isMouseForDiv(index_css.germoty("#leftDiv"));
				 if(flag_meau && flag_left_div){
					 seperatorClose();
				 }
			 });*/
             /*$("#leftDiv").mouseout(function(){
				 var flag_meau=index_css.isMouseForDiv(index_css.germoty("#leftMenu"));
				 var flag_left_div = index_css.isMouseForDiv(index_css.germoty("#leftDiv"));
				 if(flag_meau && flag_left_div){
					 seperatorClose();
				 }
			 });*/
             $("#content-main").click(function (event) {
                 seperatorClose();
             });
         }
    }
}
//显示左侧三级菜单
function showThirdMenu(menuId,fg) {
    var isOn = $("#waistband").attr("rel");
    if (isOn == "-1")
        waistbandFun("#waistband");
    if(pipeGis.toolBar.tb)
    	pipeGis.toolBar.tb.deactivate();
    if(roadIndet)
    	roadIndet=0;  
    //清空二级菜单
    //$("#side-menu").empty(); 
    //定义变量
    var thirdMenuStr = "";
    if(!menuDisplay){//前台配置三级菜单
    	 for (var i = 0; i < menuListJson.length; i++) {
    		if(menuListJson[i].system)
    			continue;
	        for(var k=0;k<menuListJson[i].menuList2.length;k++){
	        	var items = menuListJson[i].menuList2[k];
	        	if(items.id==menuId){
	        		for(var j=0;j<(items.menuList3 ? items.menuList3.length : 0);j++){ //可能有的三级菜单没有配置
	        			var item=items.menuList3[j];
	        			if(item.openMode=='comm'){
	        				// 巡检菜单
	        				if(item.url.indexOf("municipalbuild")!=-1||item.url.indexOf("xcyh")!=-1){
	        					var url='';
	        					if(item.url.indexOf("?")!=-1){
	        						url=item.url+"&serverName="+serverName+"&sde_user="+sde_user+"&userCode="+userCode+"&agcom_url="+agcom_url;
	        					}else{
	        						url=item.url+"?serverName="+serverName+"&sde_user="+sde_user+"&userCode="+userCode+"&agcom_url="+agcom_url;
	        					}
	        					//url = item.url;
	        					thirdMenuStr += "<li><a class='J_menuItem' url='" + url + "' data-index=" + dataIndex + ">" +
								"<div class='" + item.menuIcon + "' style='width: 50px;height:50px;border-radius: 50px;'></div>" +
								"<div style='padding-top:8px;color:#333;width: 60px !important;margin-left: -7px;'>" + item.text + "</div></a></li>";
	        				}else{
	        					thirdMenuStr += "<li><a class='J_menuItem' url='" + item.url + "' data-index=" + dataIndex + ">" +
								"<div class='" + item.menuIcon + "' style='width: 50px;height:50px;border-radius: 50px;'></div>" +
								"<div style='padding-top:8px;color:#333;width: 60px !important;margin-left: -7px;'>" + item.text + "</div></a></li>";
	        				}
			           		
			           	} else if (item.openMode=='jsExecute') {
			            	thirdMenuStr += "<li><a class='J_menuItem_layer' onclick=" + item.url + " data-index=" + dataIndex + ">" +
								"<div class='" + item.menuIcon + "'style='width: 50px;height:50px;border-radius: 50px;'></div>" +
								"<div style='padding-top:8px;color:#333;width: 60px !important;margin-left: -7px;'>" + item.text + "</div></a></li>";
			            } else if(item.openMode=='newwindow') {
			               	thirdMenuStr += "<li><a class='J_menuItem' href='" + item.url + "' target='_blank' data-index=" + dataIndex + ">" +
								"<div class='" + item.menuIcon + "'style='width: 50px;height:50px;border-radius: 50px;'></div>" +
								"<div style='padding-top:8px;color:#333;width: 60px !important;margin-left: -7px;'>" + item.text + "</div></a></li>";
			            } else {
			                 thirdMenuStr += "<li><a class='J_menuItem' href='/psxj/develop.html' data-index=" + dataIndex + ">" +
								"<div class='" + item.menuIcon + "'style='width: 50px;height:50px;border-radius: 50px;'></div>" +
								"<div style='padding-top:8px;color:#333;width: 60px !important;margin-left: -7px;'>" + item.text + "</div></a></li>";
			            }
			            dataIndex++;
		        	}
	        	}
	        }
		}
         //seperatorOpen();
	    $("#side-menu").html(thirdMenuStr);
	    loadJs("lib/contabs.min.js");
		$("#side-menu .J_menuItem").on('click',function(){
			var divObj=$(this).children(":first");
			var divclass = divObj.attr("class");
			if(divclass.indexOf("focus")<0)
				divObj.attr("class",divclass+"focus");
			var brotherObj=$(this).parent().siblings();
			for(var i=0;i<brotherObj.length;i++){
				var targetDiv=$(brotherObj.get(i)).children().children(":first");
				if(targetDiv.attr("class").indexOf("focus")){
					targetDiv.attr("class",targetDiv.attr("class").replace('focus',''));
				}
			}
			if(!$(this).attr("onclick")||($(this).attr("onclick").indexOf("changeMenuDataGrid")<0&&$(this).attr("onclick").indexOf("roadLocate")<0))
				$("#leftMenuTable").attr("src","");
		});
    }else{// 后台配置菜单
	    for (var i = 0; i < menuLen; i++) {
	    	if(menuList[i].pid==menuId){
	    		var url = '';
	    		if(menuList[i].link && menuList[i].link.indexOf('/${ctx}')!=-1)
	    			url=menuList[i].link.split('/${ctx}')[1];
	    		else
	    			url = menuList[i].link;
	    		if(menuList[i].invoke=='panel'){
	    			if(url.indexOf("municipalbuild")!=-1||url.indexOf("xcyh")!=-1){
    					if(url.indexOf("?")!=-1){
    						url=url+"&serverName="+serverName+"&sde_user="+sde_user+"&userCode="+userCode+"&agcom_url="+agcom_url;
    					}else{
    						url=url+"?serverName="+serverName+"&sde_user="+sde_user+"&userCode="+userCode+"&agcom_url="+agcom_url;
    					}
	            	}
	           		thirdMenuStr += "<li><a class='J_menuItem' url='" + url + "' menuList-index=" + dataIndex + ">" +
						"<div class='" + menuList[i].className + "' style='width: 50px;height:50px;border-radius: 50px;'></div>" +
						"<div style='padding-top:8px;color:#333;width: 60px !important;margin-left: -7px;'>" + menuList[i].name + "</div></a></li>";
	           	} else if (menuList[i].invoke=='jsExecute') {
	            	thirdMenuStr += "<li><a class='J_menuItem' onclick='" + url + "' menuList-index=" + dataIndex + ">" +
						"<div class='" + menuList[i].className + "'style='width: 50px;height:50px;border-radius: 50px;'></div>" +
						"<div style='padding-top:8px;color:#333;width: 60px !important;margin-left: -7px;'>" + menuList[i].name + "</div></a></li>";
	            } else if(menuList[i].invoke=='newwindow') {
	               	thirdMenuStr += "<li><a class='J_menuItem' href='" + url + "' target='_blank' menuList-index=" + dataIndex + ">" +
						"<div class='" + menuList[i].className + "'style='width: 50px;height:50px;border-radius: 50px;'></div>" +
						"<div style='padding-top:8px;color:#333;width: 60px !important;margin-left: -7px;'>" + menuList[i].name + "</div></a></li>";
	            } else {
	                 thirdMenuStr += "<li><a class='J_menuItem' href='/psxj/develop.html' menuList-index=" + dataIndex + ">" +
						"<div class='" + menuList[i].className + "'style='width: 50px;height:50px;border-radius: 50px;'></div>" +
						"<div style='padding-top:8px;color:#333;width: 60px !important;margin-left: -7px;'>" + menuList[i].name + "</div></a></li>";
	            }
	            dataIndex++;
	    	}
	    }
	    //seperatorOpen();
	    $("#side-menu").html(thirdMenuStr);
	    loadJs("lib/contabs.min.js");
		$("#side-menu .J_menuItem").on('click',function(){
			var divObj=$(this).children(":first");
			var divclass = divObj.attr("class");
			if(divclass.indexOf("focus")<0)
				divObj.attr("class",divclass+"focus");
			var brotherObj=$(this).parent().siblings();
			for(var i=0;i<brotherObj.length;i++){
				var targetDiv=$(brotherObj.get(i)).children().children(":first");
				if(targetDiv.attr("class").indexOf("focus")){
					targetDiv.attr("class",targetDiv.attr("class").replace('focus',''));
				}
			}
			if(!$(this).attr("onclick")||($(this).attr("onclick").indexOf("changeMenuDataGrid")<0&&$(this).attr("onclick").indexOf("roadLocate")<0))
				$("#leftMenuTable").attr("src","");
		});
    }
	if(parseInt($("#leftDiv").position().left) == index_css.left_div.width && !fg){
		seperatorClose();
	}else{
		seperatorOpen();
	}

}

var flag = 1;
//关闭伸缩菜单(原400--370)
function seperatorClose() {
    if(parseInt($("#leftDiv").position().left) != index_css.left_div.width ){
        return ;
    }
    $("#leftDiv").animate({ left: index_css.left_div.init.close }, 100);
    //伸缩二、三级菜单时left:"0";伸缩三级菜单：left:"70"//70为二级菜单的宽度
    $("#seperator").animate({ left: "55" }, 100);
    $("#seperator").addClass("seperatorClose").removeClass("seperatorOpen");
    flag = 0;
    //$("#page-wrapper").removeAttr("style");
    //$("#content-main").css("width", index_css.init.close + "px");
    if(map && typeof map=='object'){
        map.resize(true);
        map.reposition();
	}

}
function seperatordefaultClose() {
    $("#leftDiv").animate({ left: index_css.left_div.init.close }, 100);
    //伸缩二、三级菜单时left:"0";伸缩三级菜单：left:"70"//70为二级菜单的宽度
    $("#seperator").animate({ left: "55" }, 100);
    $("#seperator").addClass("seperatorClose").removeClass("seperatorOpen");
    flag = 0;
    $("#page-wrapper").removeAttr("style");
    $("#mapDiv").css("width", (index_css.init.open) + "px");
    $("#content-main").css("width", index_css.init.close + "px");
}
//打开伸缩菜单
function seperatorOpen() {
    if(parseInt($("#leftDiv").position().left) == index_css.left_div.width ){
    	return ;
    }
    $("#leftDiv").animate({ left: index_css.left_div.init.open }, 100);
    $("#seperator").animate({ left: "315" }, 100);//原385
    $("#seperator").addClass("seperatorOpen").removeClass("seperatorClose")
    flag = 1;
    //$("#page-wrapper").attr({ style: "margin-left:330px;" });
    //$("#content-main").css("width",index_css.init.open+"px");
    if(map&& typeof map=='object'){
        map.resize(true);
        map.reposition();
    }
}

function mapMeasure(type){
   if(!pipeNetValid)
       return;
    measure(type);
}

function mapQuery(type){
    if(!pipeNetValid)
       return;
    switch(type){
      case "spatial":
        openQueryPanel("/psxj/nnwaterSystem/PipeNetwork/spatialQuery.html","空间查询",380,180);
        break;
     case "attribute":
        openQueryPanel("/psxj/nnwaterSystem/PipeNetwork/attributeQuery.html","属性查询",500,180);
        break;
     case "quick":
        openQueryPanel("/psxj/nnwaterSystem/PipeNetwork/quickQuery.html","快速查询",350,170);
        break;
     case "diameter":
        openQueryPanel("/psxj/nnwaterSystem/PipeNetwork/diameterQuery.html","管径查询",380,170);
        break;
     case "full":
        openQueryPanel("/psxj/nnwaterSystem/PipeNetwork/fullQuery.html","综合查询",600,260);
        break;
    }
}

function roadLocate(){ 
    var srcStr="/psxj/nnwaterSystem/szwh/roadAnalysis/queryResult.html";
	$("#leftMenuTable")[0].src=srcStr;
    createNewtab("wrapper-map","地图服务");
}

function roadIdentity(){
    roadIndet=1;
	createNewtab("wrapper-map","地图服务");
	layer.msg("请在地图上点击需查询道路",{offset: ['220px', '80px'],icon: 7});
}

function roadStatistic(){
    createNewtab("/psxj/nnwaterSystem/szwh/roadAnalysis/roadStatistic.html","道路统计");
}

function mapStatistic(type){
    if(!pipeNetValid)
       return;
    if(type=="polygon")
      openQueryPanel("/psxj/nnwaterSystem/PipeNetwork/polygonStatistic.html","多边形管线统计",380,130);
    else
      openQueryPanel("/psxj/nnwaterSystem/PipeNetwork/districtStatistic.html","行政区管线统计",450,130);
}

function waistbandFun(o){
    var isOn = $(o).attr("rel");
    if (isOn == "1") {
        $("#funPannel").removeClass("funPannelOn").addClass("funPannelOff");
        $(o).attr("rel", "-1");
        $(o).find("img").attr("src", "img/menu-slide-down.png");      
        $("#leftMenuTableDiv").height($("#leftDiv").height()-$("#funPannel").height());
        window.frames["leftMenuTable"].changeTable($("#leftDiv").height()-$("#funPannel").height());
    } else {
        $("#funPannel").removeClass("funPannelOff").addClass("funPannelOn");
        $(o).attr("rel", "1");
        $(o).find("img").attr("src", "img/menu-slide-up.png");
        $("#leftMenuTableDiv").height($("#leftDiv").height()-$("#funPannel").height());
        window.frames["leftMenuTable"].changeTable($("#leftDiv").height()-$("#funPannel").height());
    }
}

function changeMenuDataGrid(type,param1,tableTitleName){
    var src=document.getElementById("leftMenuTable").src;
    if(src.indexOf("bootstrapDataGrid_jyd.html")>0&&$("#leftMenuTable")[0].contentWindow.intervalIndex&&$("#leftMenuTable")[0].contentWindow.intervalIndex>0)
       rainfallModelFunctions.cancel();
	src = 'nnwaterSystem/BootstrapDataGrid';
	if(type=="bz")
		src+="/bootstrapDataGrid.html?type=37&tableTitleName="+encodeURIComponent(tableTitleName)+ "&equipType=" + encodeURIComponent(param1);
	else if(type=="jsd")
		src+="/bootstrapDataGrid_jsd.html?tableTitleName="+encodeURIComponent(tableTitleName);
	else if(type=="sx")
		src+="/bootstrapDataGrid.html?type=25,26,27,28&tableTitleName="+encodeURIComponent(tableTitleName)+ "&equipType=" + encodeURIComponent(param1);
	else if(type=="nh")
		src+="/bootstrapDataGrid.html?type=36&tableTitleName="+encodeURIComponent(tableTitleName)+ "&equipType=" + encodeURIComponent(param1);
	else if(type=="yl"){
		src+="/bootstrapDataGrid.html?type=29,30,31&tableTitleName="+encodeURIComponent(tableTitleName)+ "&equipType=" + encodeURIComponent(param1);
	    drainageModelFunctions.use("realtime-rainfall-map");
	}
	else if(type=="hyl"){
		src+="/bootstrapDataGrid_hjy.html?tableTitleName="+encodeURIComponent(tableTitleName);
	}else if(type=="sw")
		src+="/bootstrapDataGrid.html?type=20&tableTitleName="+encodeURIComponent(tableTitleName)+ "&equipType=" + encodeURIComponent(param1);
	else if(type=="jx")
		src+="/bootstrapDataGrid.html?type=33&tableTitleName="+encodeURIComponent(tableTitleName)+ "&equipType=" + encodeURIComponent(param1);
	else if(type=="jxll")
		src+="/bootstrapDataGrid.html?type=35&tableTitleName="+encodeURIComponent(tableTitleName)+ "&equipType=" + encodeURIComponent(param1);
	else if(type=="ck")
		src+="/bootstrapDataGrid_ck.html?type=22&tableTitleName="+encodeURIComponent(tableTitleName)+ "&equipType=" + encodeURIComponent(param1);
	else if(type=="jy")
		src+="/bootstrapDataGrid_jyd.html?tableTitleName="+encodeURIComponent("降雨格点");
	else if(type=="ss")
		src+="/bootstrapDataGrid_ss.html?tableTitleName="+encodeURIComponent("设施总览")+ "&equipType=" + encodeURIComponent(param1);
	else if(type=="nh,sw")
		src+="/bootstrapDataGrid.html?type=34&tableTitleName="+encodeURIComponent(tableTitleName)+ "&equipType=" + encodeURIComponent(param1);
	else if(type=="xcgj")
		src="systemInfo/ssxjxt/xcgj/historyLine.html?tableTimeName="+encodeURIComponent(tableTitleName);
	document.getElementById("leftMenuTable").src=src;
	createNewtab("wrapper-map","地图服务");
}

function clearLeftMenuGrid(){
   document.getElementById("leftMenuTable").src="about:blank";
}

$(function () {
	//从后台加载菜单，true表示匹配前台，false直接从后台读取菜单
	//loadMenuFromService(false);
    //初始化一级菜单
   // showFirstMenuList();
	loadRootMeau(menuDisplay);//false 表示从前台获取菜单
    init_click();
});
/**
 * click时间初始化
 * */
function init_click(){
    //给左侧栏伸缩注册点击事件
    $("#seperator").click(function () {
        if (flag == 1) {
            //缩进;
            seperatorClose()
        } else {
            //展开;
            seperatorOpen()
        }
    });
    $(document).mousemove(function(e){
        index_css.x = e.pageX;
        index_css.y = e.pageY;
    });
}
/**
 * 点击图例-HYS
 * @param obj
 */
function clickLegend(obj,type){
	$(obj).parent().toggleClass("hover");
	showLayer($(obj).parent().hasClass("hover"),type);
}

/**
 * 显示图层
 * @param type
 */
function showLayer(isShow,type){
	for (i in graphicsNNArr){
		if(graphicsNNArr[i].id==type){
			graphicsNNArr[i].setVisibility(isShow);
			return;
		}
	}
}
function exitSystem(){
	/*$.ajax({
		type:'post',
		url: baseUrls+":"+location.port+"/psxj/logout",
		cache: false,
		success: function() {
			$.ajax({
				type:'post',
				url:baseUrls+":"+location.port+"/psxj/login!logNoCasOut.action",
				cache: false,
				success: function() {
					window.location.href=baseUrls+":"+location.port+"/psxj/login?service=http%3A%2F%2F"+location.hostname+"%3A"+location.port+"%2Fpsxj%2F";
				}
			});
		}
	});*/
}

//封装动态新增tab函数

 //方法一:通过菜单ID新增tab
function createTab(menuId){
	var menuLen=menuList.length;
    for(var i=0;i<menuLen;i++){
		if(menuList[i].id==menuId){
			var l = menuList[i].name;
			var o = menuList[i].link;
			createNewtab(o,l);
	    } 
    } 
}
//方法二：通过直接传入链接地址新增tab
function createNewtab(o,title){
	var k=true;
			$(".J_menuTab").each(function() {
	            if ($(this).data("id") == o) {
	            if (!$(this).hasClass("active")) {
	                $(this).addClass("active").siblings(".J_menuTab").removeClass("active");
	                    $(".J_mainContent .J_iframe").each(function() {
	                        if ($(this).data("id") == o) {
	                            $(this).show().siblings(".J_iframe").hide();
	                            return false
	                        }
	                    })
	                }
	                k = false;
	                return false
	            }
	        });
			if(k){
				var p = '<a href="javascript:;" class="active J_menuTab" data-id="' + o + '">' + title + ' <i class="fa fa-times-circle"></i></a>';
				$(".J_menuTab").removeClass("active");
				var n = '<iframe class="J_iframe"  width="100%" height="100%" src="' + o + '" frameborder="0" data-id="' + o + '" seamless></iframe>';
				$(".J_mainContent").find(".J_iframe").hide().parents(".J_mainContent").append(n);
				$(".J_menuTabs .page-tabs-content").append(p);
			}
			return false;
}

function closeTab() {
    var m = $(".fa-times-circle").parents(".J_menuTab.active").data("id");
    if ($(".fa-times-circle").parents(".J_menuTab.active").hasClass("active")) {
        if ($(".fa-times-circle").parents(".J_menuTab.active").next(".J_menuTab").size()) {
            $(".fa-times-circle").parents(".J_menuTab.active").remove();
            $(".fa-times-circle").parents(".J_menuTab.active").next(".J_menuTab:eq(0)").addClass("active");          
            $(".J_mainContent .J_iframe").each(function() {  
	             if ($(this).data("id") == m) {
	             	 $(this).next().show()	             
	                 $(this).remove();
	                 return false;
	             }
            });
        }
        else if ($(".fa-times-circle").parents(".J_menuTab").prev(".J_menuTab").size()) {
            $(".fa-times-circle").parents(".J_menuTab.active").remove();           
            $(".fa-times-circle").parents(".J_menuTab.active").prev(".J_menuTab:last").addClass("active");
            $(".J_mainContent .J_iframe").each(function() {  
	             if ($(this).data("id") == m) {	 
	             	 $(this).prev().show();
	                 $(this).remove();
	                 return false;
	             }
            });  
        }
    } else {
        $(".fa-times-circle").parents(".J_menuTab").remove(); 
    }
    return false;
}
/**/
function closeTab() {
    var m = $(this).parents(".J_menuTab").data("id");
    var l = $(this).parents(".J_menuTab").width();
    if ($(this).parents(".J_menuTab").hasClass("active")) {
        if ($(this).parents(".J_menuTab").next(".J_menuTab").size()) {
            var k = $(this).parents(".J_menuTab").next(".J_menuTab:eq(0)").data("id");
            $(this).parents(".J_menuTab").next(".J_menuTab:eq(0)").addClass("active");
            $(this).parents(".J_menuTab").remove();
            $(".J_mainContent .J_iframe").each(function() {
                if ($(this).data("id") == m) {
                    $(this).remove();
                    return false
                }
            })
        }
        if ($(this).parents(".J_menuTab").prev(".J_menuTab").size()) {
            var k = $(this).parents(".J_menuTab").prev(".J_menuTab:last").data("id");
            $(this).parents(".J_menuTab").prev(".J_menuTab:last").addClass("active");
            $(this).parents(".J_menuTab").remove();  
        }
    } else {
        $(this).parents(".J_menuTab").remove(); 
    }
    return false
} 

//屏幕自适应点击事件
function screenWidth(){
	var wid=$(window).width();
	if(wid<=980){
		//初始化为隐藏
		$("#topMenu").hide();
		//点击按钮切换菜单选项
		var onOff=true;
		$("#list").click(function(){
			if(onOff){
				$("#topMenu").show();
				onOff=false;
			}else{
				$("#topMenu").hide();
				onOff=true;
			}
		});
	}else if(wid>980){
		$("#topMenu").show();
	}
}

$(window).resize(function(){
	screenWidth();
});

function showTips(layerId,obj){
	layer.tips('<a href="#" onclick="openLayerOpacitySet(\''+layerId+'\')">透明度</a>', '#'+obj.parentNode.id,{
		tips: [2, '#000101']
	});
}
/**
 * 打开图层选择框
 * @param layerId
 * @param opacity
 */
function openLayerOpacitySet(layerId){
	var options = {
		id: 'opacitySliderPopup',
        content: '<div style="margin:5px 10px 5px;padding:0px;"><div id="opacitySlider" ></div></div>',
		parentSelector: '#mapDiv',
		title:'透明度设置',
		top: '0',
		left: '300',
		opacity: 1,
		width: '420',
		height: '50'
	}
	new NewPopup.NewPopupWin(options);
	ssOpen(layerId);
	//setTimeout("ssOpen()",1000);	
}
var opacitySlider;
function ssOpen(layerId){
	opacitySlider=$("#opacitySlider").slider({
		slide: function( event, ui ) {setLayerOpacity(layerId,ui.value/100);}		
	});
	var layerObject=layerObjects[layerId];
	if(layerObject!=null && layerObject.opacity!=null){		
		opacitySlider.slider( "value", layerObject.opacity*100);
	}else{
		opacitySlider.slider( "value", 100);
	}
}

function addRecord(type){
	$.ajax({
		method : 'GET',
		url : '/psxj/meteo-hydrolog-alarm!listJson.action',
		async : true,
		dataType : 'json',
		success : function(data) {
			var userType=data.userType;
			if(type!=userType){
				if(type==1)
					layer.msg('当前用户无权限启动市级响应预案!');
				else
					layer.msg('当前用户无权限启动成员单位响应预案!');
			   	return;
			} 
			if(data.cityRecord){
				//进入调度室
				showDialog(data.cityRecord.id,userType)
			} else if(data.form) {
				//启动预案
				startYJ(data.form.id,userType);
			} else {
			   layer.msg('当前无气象水文预警，不能启动预案!');
			}
		},
		error : function() {
			parent.layer.msg('请求失败');
		}
	});
}

function dutyManagement(){
	$.ajax({
		url: '/psxj/meteo-hydrolog-alarm!getUserType.action',
		dataType: 'json',
		cache:false,
		success: function (data){
			if(data.type==1)
				dutyManage(1);
			else
				dutyManage(2);
		},
		error : function() {
			alert('error');
		}
	});
}

/**
 * 设置图层透明度
 * @param layerId
 * @param opacity
 */
function setLayerOpacity(layerId,opacity){
	var layerObject=layerObjects[layerId];
	if(layerObject!=null && layerObject.opacity!=null){			
		
	}else{
		layerObject=new Object();
	}
	layerObject.opacity=opacity;
	layerObjects[layerId]=layerObject;
	var layer =map.getLayer(layerId);
	if(layer){
		layer.setOpacity(opacity);
	}	
}

//构造工具栏内容
var mapToolbarSet={show:true,toggle:false,items:[
	{id:"toolbarCity",name:"广州",imgSrc:"",checked:true,onclick:'showCityList(this)'},
	{id:"toolbarDT",name:"地图",imgSrc:"img/toolbar/global.png",checked:false,onclick:'displaySLLayer()'},
	{id:"toolbarYX",name:"影像",imgSrc:"img/toolbar/movie.png",checked:false,onclick:'displayYXLayer()'},
	{id:"toolbarDX",name:"地形",imgSrc:"img/toolbar/map.png",checked:false,onclick:'alert("地形")'},
	{id:"toolbarGJ",name:"工具",imgSrc:"img/toolbar/tools.png",checked:false,onclick:'',
		children:[
		    {id:"toolQC",name:"清除",imgSrc:"",checked:false,onclick:'clearMapGraphic();'},
			{id:"toolCJ",name:"测距",imgSrc:"img/toolbar/ruler.png",checked:false,onclick:'mapMeasure("length");'},
			{id:"toolBJ",name:"标记",imgSrc:"img/toolbar/mark.png",checked:false,onclick:'initMarker();'},
			{id:"toolFX",name:"分享",imgSrc:"img/toolbar/share.png",checked:false,onclick:'alert("分享")'}
		]  
	}
]}
//生成部件动态通知
//awaterui.partsChange();
//地图生成工具栏
//awaterui.toolbar();
//地图生成图例
//awaterui.mapLegend();
//awaterui.mapForecast();
//awaterui.alarmWindow();地图报警弹出
//awaterui.addressLocate();搜索栏
//关闭tab页
function closeNavTab(o) {
	var m = $(this).data("id");
	var l = $(this).width();
   	$(".J_menuTab").each(function() {
    	if (o.indexOf($(this).data("id"))>-1){
      		if ($(this).hasClass("active")) {
				if ($(this).next().size()) {
					var k = $(this).next(".J_menuTab:eq(0)").data("id");
					$(this).next(".J_menuTab:eq(0)").addClass("active");
					$(this).remove();
					$(".J_mainContent .J_iframe").each(function() {
	                    if ($(this).data("id") == k) {
	                        $(this).show().siblings(".J_iframe").hide();
	                        return false
	                    }
	              		});
					var n = parseInt($(".page-tabs-content").css("margin-left"));
	                if (n < 0) {
	                    $(".page-tabs-content").animate({
	                        marginLeft: (n + l) + "px"
	                    },
	                    "fast")
	                }
	                $(this).remove();
	                $(".J_mainContent .J_iframe").each(function() {
	                    if ($(this).data("id") == m) {
	                        $(this).remove();
	                        return false
	                    }
	                })
				}
				if ($(this).prev(".J_menuTab").size()) {
					var k = $(this).prev(".J_menuTab:last").data("id");
					$(this).prev(".J_menuTab:last").addClass("active");
					$(".J_mainContent .J_iframe").each(function() {
	                    if ($(this).data("id") == k) {
	                        $(this).show().siblings(".J_iframe").hide();
	                        return false		                    
	                  		}
	                 });
					$(this).remove();
					$(".J_mainContent .J_iframe").each(function() {
	                    if ($(this).data("id") == m) {
	                        $(this).remove();
	                        return false
	                    }
	                })
				}
		} else {
			$(this).remove(); 
			$(".J_mainContent .J_iframe").each(function() {
                if ($(this).data("id") == m) {
                    $(this).remove();
                    return false
                }
            });
		}
		return false;
	}
	});
}           

//关闭三级菜单附属表格页面
function closeleftMenuTable(){
	$("#leftMenuTable").attr("src","");
}

function legendTreeCheck(event, treeId, treeNode){
	var zTree=$.fn.zTree.getZTreeObj("treeLegend");
	if(treeNode.layerName){
		showLayer(treeNode.checked,treeNode.layerName);
		if(treeNode.pId>10){   //三级子节点
			var parent=treeNode.getParentNode();
			parent.checked=true;
			zTree.updateNode(parent);
			showLayer(parent.checked,parent.layerName);
		}else if(treeNode.children){  
			$(treeNode.children).each(function (index, o) {
				showLayer(treeNode.checked,o.layerName);
			});
		}
	} else {
		//获取子节点，并勾选显示图层
		$(treeNode.children).each(function (index, obj) {
			showLayer(treeNode.checked,obj.layerName);
			if(obj.children){
				$(obj.children).each(function (index, o) {
					showLayer(o.checked,o.layerName);
				});
			}
		});
	}
}
function checkbox_layer(eve){
	var className = $(eve).attr('id');
	var flag = $(eve).children("input[type='checkbox']").is(':checked');
	if(className && typeof  awaterui.featureLayers=='object' && awaterui.featureLayers[className]){
		var layerId =awaterui.featureLayers[className].layerId;
		var layer = map.getLayer(layerId);
		if(layer) {
            if (layer.visible) {
                layer.hide();
                $(eve).children("input[type='checkbox']").get(0).checked=false;
            } else {
                layer.show();
                $(eve).children("input[type='checkbox']").get(0).checked=true;
            }
        }
	}


}
/**
 * 图片预览方法（在首页预览）
 * */
var viewer;
function initViewer(html,el){
	if(!el)
		return;
	if(el && $("#"+el).html() || viewer){
		$("#"+el).parent().html(html);
		viewer=null;
		viewer = new Viewer(document.getElementById(el),
				{ url: 'data-original',zoomRatio: 0.4}); 
	}else{
		$("<div/>",{
			html:html,
			style:"display:none",
		}).appendTo('body');
		viewer = new Viewer(document.getElementById(el),
				{ url: 'data-original',zoomRatio: 0.4}); 
	}
}
